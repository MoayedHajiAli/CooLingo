import speech_recognition as sr
from os import path
import os

class SpeechToText():

    def __init__(self):
        
        self.AUDIO_FILENAME = "audio_output"
        self.OUTPUT_PATH = os.path.join(os.getcwd(), self.AUDIO_FILENAME)
        
        # Creating a folder to hold the audio files generated by the user.
        # Create only if the folder does not exist.
        if not os.path.isdir(self.OUTPUT_PATH):
            os.mkdir(self.OUTPUT_PATH)


    def get_speech(self, audio_file_name : str):
        """
        Gets the speech input through the system mircophone.
        
        Parameters:
            audio_file_name (str): the file name of the generated
                audio file.
        """
        # obtain audio from the microphone
        r = sr.Recognizer()

        with sr.Microphone() as source:
            print("Say something!", flush=True)
            audio = r.listen(source)

        # write audio to a WAV file
        audio_path = os.path.join(self.OUTPUT_PATH, audio_file_name)

        with open(audio_path, "wb") as f:
            f.write(audio.get_wav_data())
    
    def speech_to_text(self, AUDIO_FILE : str):
        """
        Reads an audio file and converts it into text.
        
        Parameters:
            audio_file_name (str): the file name of the audio file
                to be read.
        Return:
            The text (str) retrieved from the audio file.

        """

        # use the audio file as the audio source
        r = sr.Recognizer()
        with sr.AudioFile(AUDIO_FILE) as source:
            audio = r.record(source)  # read the entire audio file

        text = ""

        try:
            # for testing purposes, we're just using the default API key
            # to use another API key, use `r.recognize_google(audio, key="GOOGLE_SPEECH_RECOGNITION_API_KEY")`
            # instead of `r.recognize_google(audio)`
            text = r.recognize_google(audio)
            print(f'Google Speech: {text}')

        except sr.UnknownValueError:
            text = "UNKOWN"
            print("Google Speech Recognition could not understand audio")

        except sr.RequestError as e:
            text = "UNKOWN"
            print("Could not request results from Google Speech Recognition service; {0}".format(e))

        return text

    def generate_text_from_speech(self, audio_file_name="microphone-results.wav"):
        """
        Gets speech from the system microphone and converts it into text.
        
        Parameters:
            audio_file_name (str): the file name of the audio file to be
                generated and then read.
        Return:
            The text (str) retrieved from the audio file.

        """
        self.get_speech(audio_file_name)
        AUDIO_FILE = path.join(path.dirname(path.realpath(__file__)), 
            path.join(self.OUTPUT_PATH, audio_file_name))
        text = self.speech_to_text(AUDIO_FILE)
        return text

